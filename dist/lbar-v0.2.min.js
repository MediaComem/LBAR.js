AFRAME.registerSystem("gps-position",{schema:{minAccuracy:{type:"int",default:100},minDistance:{type:"number",default:2},cam3DoF:{type:"boolean",default:true}},init:function(){const success=this.checkDependencies();if(!success)return;this.currentPosition={latitude:0,longitude:0};this.originPosition=null;this._onDeviceGPS=this._onDeviceGPS.bind(this);this._onDeviceGPSError=this._onDeviceGPSError.bind(this);this._watchPosition=navigator.geolocation.watchPosition(this._onDeviceGPS,this._onDeviceGPSError,{enableHighAccuracy:true,timeout:2e4});this.video=null;if(this.data.cam3DoF&&!this.el.sceneEl.is("vr-mode")&&!this.el.sceneEl.is("ar-mode")){this._createVideo()}this._onEnterVrAr=this._onEnterVrAr.bind(this);this._onExitVrAr=this._onExitVrAr.bind(this);window.addEventListener("enter-vr",this._onEnterVrAr);window.addEventListener("exit-vr",this._onExitVrAr)},remove:function(){this._removeVideo();window.removeEventListener("enter-vr",this._onEnterVrAr);window.removeEventListener("exit-vr",this._onExitVrAr);if(this._watchPosition){navigator.geolocation.clearWatch(this._watchPosition)}},update:function(oldData){if(Object.entries(oldData).length===0)return;if(this.data.cam3DoF!==oldData.cam3DoF){if(this.data.cam3DoF){this._createVideo()}else{this._removeVideo()}}},checkDependencies:function(){let success=true;if("geolocation"in navigator===false){console.error("Geolocation is not supported by your browser");success=false}return success},_onEnterVrAr:function(){this._pauseVideo()},_onExitVrAr:function(){if(this.video){this._unPauseVideo()}else if(this.data.cam3DoF){this._createVideo()}},_createVideo:function(){this.videoContainer=document.createElement("video-container");this.videoContainer.style.width="100vw";this.videoContainer.style.height="100vh";this.videoContainer.style.position="absolute";this.videoContainer.style.top="0";this.videoContainer.style.left="0";this.videoContainer.style.zIndex="-2";this.video=document.createElement("video");this.video.setAttribute("autoplay","");this.video.setAttribute("muted","");this.video.setAttribute("playsinline","");this.video.style.height="100vh";if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){console.error("arError",{error:"VIDEO_FAIL"})}else{navigator.mediaDevices.getUserMedia({audio:false,video:{facingMode:"environment"}}).then(stream=>this.video.srcObject=stream)}this.videoContainer.appendChild(this.video);document.body.appendChild(this.videoContainer)},_removeVideo:function(){if(!this.video)return;this._pauseVideo();this.video.remove();this.videoContainer.removeChild(this.video);this.video=null;document.body.removeChild(this.videoContainer);this.videoContainer=null},_pauseVideo:function(){if(!this.video)return;this.video.pause();const tracks=this.video.srcObject.getTracks();tracks.forEach(track=>track.stop())},_unPauseVideo:function(){if(!this.video)return;navigator.mediaDevices.getUserMedia({audio:false,video:{facingMode:"environment"}}).then(stream=>this.video.srcObject=stream);this.video.play()},_onDeviceGPSError:function(error){console.warn(`error ${err.code}: ${err.message}`);if(err.code===1){console.error("Please activate Geolocation and refresh the page. If it is already active, please check permissions for this website.")}if(err.code===3){console.error("Cannot retrieve GPS position. Signal is absent.")}},_onDeviceGPS:function(pos){const position={latitude:pos.coords.latitude,longitude:pos.coords.longitude,accuracy:pos.coords.accuracy};if(position.accuracy>this.data.minAccuracy){console.error("GPS signal is very poor. Try move outdoor or to an area with a better signal.");return}const distMoved=this._haversineDist(this.currentPosition,position);if(distMoved>=this.data.minDistance||!this.originPosition){this.currentPosition=position;window.dispatchEvent(new CustomEvent("gps-position-update",{detail:{...this.currentPosition}}));if(!this.originPosition){this.originPosition=this.currentPosition;window.dispatchEvent(new CustomEvent("gps-position-set",{detail:{...this.currentPosition}}))}}},_haversineDist:function(src,dest){const dlongitude=THREE.Math.degToRad(dest.longitude-src.longitude);const dlatitude=THREE.Math.degToRad(dest.latitude-src.latitude);const a=Math.sin(dlatitude/2)*Math.sin(dlatitude/2)+Math.cos(THREE.Math.degToRad(src.latitude))*Math.cos(THREE.Math.degToRad(dest.latitude))*(Math.sin(dlongitude/2)*Math.sin(dlongitude/2));const angle=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return angle*6371e3}});AFRAME.registerComponent("gps-position",{schema:{longitude:{type:"number",default:0},latitude:{type:"number",default:0}},init:function(){this._onPositionSet=this._onPositionSet.bind(this);this._onPositionUpdate=this._onPositionUpdate.bind(this);if(this.system.originPosition){this._onPositionUpdate({detail:this.system.currentPosition})}else{this.el.setAttribute("visible",false)}window.addEventListener("gps-position-set",this._onPositionSet);window.addEventListener("gps-position-update",this._onPositionUpdate);this._onExitVrAr=this._onExitVrAr.bind(this);window.addEventListener("exit-vr",this._onExitVrAr)},remove:function(){window.removeEventListener("gps-position-set",this._onPositionSet);window.removeEventListener("gps-position-update",this._onPositionUpdate);window.removeEventListener("exit-vr",this._onExitVrAr)},_onExitVrAr:function(){this._onPositionUpdate({detail:this.system.currentPosition})},_onPositionSet:function(posEvt){this.el.setAttribute("visible",true)},_onPositionUpdate:function(posEvt){const haversineDist=this.system._haversineDist;const gpsPos=posEvt.detail;const position={x:0,y:this.el.getAttribute("position").y||0,z:0};position.x=haversineDist(gpsPos,{longitude:this.data.longitude,latitude:gpsPos.latitude});position.x*=this.data.longitude>gpsPos.longitude?1:-1;position.z=haversineDist(gpsPos,{longitude:gpsPos.longitude,latitude:this.data.latitude});position.z*=this.data.latitude>gpsPos.latitude?-1:1;this.el.setAttribute("position",position)}});AFRAME.registerComponent("faces-north",{init:function(){const success=this.checkDependencies();if(!success)return;this.alwaysInSynch=!this.el.sceneEl.is("vr-mode")&&!this.el.sceneEl.is("ar-mode");this.heading=null;this._onDeviceOrientation=this._onDeviceOrientation.bind(this);window.addEventListener("deviceorientationabsolute",this._onDeviceOrientation);this._onEnterVrAr=this._onEnterVrAr.bind(this);this._onExitVrAr=this._onExitVrAr.bind(this);window.addEventListener("enter-vr",this._onEnterVrAr);window.addEventListener("exit-vr",this._onExitVrAr);this._onPositionUpdate=this._onPositionUpdate.bind(this);window.addEventListener("gps-position-update",this._onPositionUpdate)},checkDependencies:function(){let success=true;if("ondeviceorientationabsolute"in window===false){console.error("Compass absolute orientation not supported by your browser");success=false}return success},remove:function(){window.removeEventListener("deviceorientationabsolute",this._onDeviceOrientation);window.removeEventListener("gps-position-update",this._onPositionUpdate);window.removeEventListener("enter-vr",this._onEnterVrAr);window.removeEventListener("exit-vr",this._onExitVrAr)},_onEnterVrAr:function(){this.alwaysInSynch=false},_onExitVrAr:function(){this.alwaysInSynch=true;this.el.object3D.position.x=0;this.el.object3D.position.z=0},_onPositionUpdate:function(posEvt){if(this.el.sceneEl.is("vr-mode")||this.el.sceneEl.is("ar-mode")){const camPos=this.el.sceneEl.camera.el.object3D.position;this.el.object3D.position.x=camPos.x;this.el.object3D.position.z=camPos.z}},_onDeviceOrientation:function(event){if(!event.alpha){console.error("No alpha data in the Orientation event");return}if(!event.absolute){console.error("Not an absolute orientation event");return}const newHeading=this._computeCompassHeading(event.alpha,event.beta,event.gamma);if(this.alwaysInSynch||!this.heading){this.heading=newHeading;this._updateRotation()}else{this.heading=newHeading}},_updateRotation:function(){this.el.object3D.rotation.y=THREE.Math.degToRad(this.heading%360)},_computeCompassHeading:function(alpha,beta,gamma){const alphaRad=alpha*(Math.PI/180);const betaRad=beta*(Math.PI/180);const gammaRad=gamma*(Math.PI/180);const cA=Math.cos(alphaRad);const sA=Math.sin(alphaRad);const sB=Math.sin(betaRad);const cG=Math.cos(gammaRad);const sG=Math.sin(gammaRad);const rA=-cA*sG-sA*sB*cG;const rB=-sA*sG+cA*sB*cG;let compassHeading=Math.atan(rA/rB);if(rB<0){compassHeading+=Math.PI}else if(rA<0){compassHeading+=2*Math.PI}compassHeading*=180/Math.PI;return compassHeading}});AFRAME.registerComponent("pitch-roll-look-controls",{dependencies:["position","rotation"],schema:{enabled:{default:true},magicWindowTrackingEnabled:{default:true},pointerLockEnabled:{default:false},reverseMouseDrag:{default:false},reverseTouchDrag:{default:false},touchEnabled:{default:true},mouseEnabled:{default:true}},init:function(){this.deltaYaw=0;this.previousHMDPosition=new THREE.Vector3;this.hmdQuaternion=new THREE.Quaternion;this.magicWindowAbsoluteEuler=new THREE.Euler;this.magicWindowDeltaEuler=new THREE.Euler;this.position=new THREE.Vector3;this.magicWindowObject=new THREE.Object3D;this.rotation={};this.deltaRotation={};this.savedPose=null;this.pointerLocked=false;this.setupMouseControls();this.bindMethods();this.previousMouseEvent={};this.setupMagicWindowControls();this.savedPose={position:new THREE.Vector3,rotation:new THREE.Euler};if(this.el.sceneEl.is("vr-mode")||this.el.sceneEl.is("ar-mode")){this.onEnterVR()}},setupMagicWindowControls:function(){var magicWindowControls;var data=this.data;if(AFRAME.utils.device.isMobile()||AFRAME.utils.device.isMobileDeviceRequestingDesktopSite()){magicWindowControls=this.magicWindowControls=new THREE.DeviceOrientationControls(this.magicWindowObject);if(typeof DeviceOrientationEvent!=="undefined"&&DeviceOrientationEvent.requestPermission){magicWindowControls.enabled=false;if(this.el.sceneEl.components["device-orientation-permission-ui"].permissionGranted){magicWindowControls.enabled=data.magicWindowTrackingEnabled}else{this.el.sceneEl.addEventListener("deviceorientationpermissiongranted",function(){magicWindowControls.enabled=data.magicWindowTrackingEnabled})}}}},update:function(oldData){var data=this.data;if(data.enabled!==oldData.enabled){this.updateGrabCursor(data.enabled)}if(oldData&&!data.magicWindowTrackingEnabled&&oldData.magicWindowTrackingEnabled){this.magicWindowAbsoluteEuler.set(0,0,0);this.magicWindowDeltaEuler.set(0,0,0)}if(this.magicWindowControls){this.magicWindowControls.enabled=data.magicWindowTrackingEnabled}if(oldData&&!data.pointerLockEnabled!==oldData.pointerLockEnabled){this.removeEventListeners();this.addEventListeners();if(this.pointerLocked){this.exitPointerLock()}}},tick:function(t){var data=this.data;if(!data.enabled){return}this.updateOrientation()},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners();if(this.pointerLocked){this.exitPointerLock()}},remove:function(){this.removeEventListeners();if(this.pointerLocked){this.exitPointerLock()}},bindMethods:function(){this.onMouseDown=this.onMouseDown.bind(this);this.onMouseMove=this.onMouseMove.bind(this);this.onMouseUp=this.onMouseUp.bind(this);this.onTouchStart=this.onTouchStart.bind(this);this.onTouchMove=this.onTouchMove.bind(this);this.onTouchEnd=this.onTouchEnd.bind(this);this.onEnterVR=this.onEnterVR.bind(this);this.onExitVR=this.onExitVR.bind(this);this.onPointerLockChange=this.onPointerLockChange.bind(this);this.onPointerLockError=this.onPointerLockError.bind(this)},setupMouseControls:function(){this.mouseDown=false;this.pitchObject=new THREE.Object3D;this.yawObject=new THREE.Object3D;this.yawObject.position.y=10;this.yawObject.add(this.pitchObject)},addEventListeners:function(){var sceneEl=this.el.sceneEl;var canvasEl=sceneEl.canvas;if(!canvasEl){sceneEl.addEventListener("render-target-loaded",bind(this.addEventListeners,this));return}canvasEl.addEventListener("mousedown",this.onMouseDown,false);window.addEventListener("mousemove",this.onMouseMove,false);window.addEventListener("mouseup",this.onMouseUp,false);canvasEl.addEventListener("touchstart",this.onTouchStart);window.addEventListener("touchmove",this.onTouchMove);window.addEventListener("touchend",this.onTouchEnd);sceneEl.addEventListener("enter-vr",this.onEnterVR);sceneEl.addEventListener("exit-vr",this.onExitVR);if(this.data.pointerLockEnabled){document.addEventListener("pointerlockchange",this.onPointerLockChange,false);document.addEventListener("mozpointerlockchange",this.onPointerLockChange,false);document.addEventListener("pointerlockerror",this.onPointerLockError,false)}},removeEventListeners:function(){var sceneEl=this.el.sceneEl;var canvasEl=sceneEl&&sceneEl.canvas;if(!canvasEl){return}canvasEl.removeEventListener("mousedown",this.onMouseDown);window.removeEventListener("mousemove",this.onMouseMove);window.removeEventListener("mouseup",this.onMouseUp);canvasEl.removeEventListener("touchstart",this.onTouchStart);window.removeEventListener("touchmove",this.onTouchMove);window.removeEventListener("touchend",this.onTouchEnd);sceneEl.removeEventListener("enter-vr",this.onEnterVR);sceneEl.removeEventListener("exit-vr",this.onExitVR);document.removeEventListener("pointerlockchange",this.onPointerLockChange,false);document.removeEventListener("mozpointerlockchange",this.onPointerLockChange,false);document.removeEventListener("pointerlockerror",this.onPointerLockError,false)},updateOrientation:function(){var object3D=this.el.object3D;var pitchObject=this.pitchObject;var yawObject=this.yawObject;var sceneEl=this.el.sceneEl;if((sceneEl.is("vr-mode")||sceneEl.is("ar-mode"))&&sceneEl.checkHeadsetConnected()){return}this.updateMagicWindowOrientation();object3D.rotation.x=this.magicWindowDeltaEuler.x+pitchObject.rotation.x;object3D.rotation.z=this.magicWindowDeltaEuler.z},updateMagicWindowOrientation:function(){var magicWindowAbsoluteEuler=this.magicWindowAbsoluteEuler;var magicWindowDeltaEuler=this.magicWindowDeltaEuler;if(this.magicWindowControls&&this.magicWindowControls.enabled){this.magicWindowControls.update();magicWindowAbsoluteEuler.setFromQuaternion(this.magicWindowObject.quaternion,"YXZ");if(!this.previousMagicWindowYaw&&magicWindowAbsoluteEuler.y!==0){this.previousMagicWindowYaw=magicWindowAbsoluteEuler.y}if(this.previousMagicWindowYaw){magicWindowDeltaEuler.x=magicWindowAbsoluteEuler.x;magicWindowDeltaEuler.y+=magicWindowAbsoluteEuler.y-this.previousMagicWindowYaw;magicWindowDeltaEuler.z=magicWindowAbsoluteEuler.z;this.previousMagicWindowYaw=magicWindowAbsoluteEuler.y}}},onMouseMove:function(evt){var direction;var movementX;var movementY;var pitchObject=this.pitchObject;var previousMouseEvent=this.previousMouseEvent;var yawObject=this.yawObject;if(!this.data.enabled||!this.mouseDown&&!this.pointerLocked){return}if(this.pointerLocked){movementX=evt.movementX||evt.mozMovementX||0;movementY=evt.movementY||evt.mozMovementY||0}else{movementX=evt.screenX-previousMouseEvent.screenX;movementY=evt.screenY-previousMouseEvent.screenY}this.previousMouseEvent.screenX=evt.screenX;this.previousMouseEvent.screenY=evt.screenY;direction=this.data.reverseMouseDrag?1:-1;yawObject.rotation.y+=movementX*.002*direction;pitchObject.rotation.x+=movementY*.002*direction;pitchObject.rotation.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,pitchObject.rotation.x))},onMouseDown:function(evt){var sceneEl=this.el.sceneEl;if(!this.data.enabled||!this.data.mouseEnabled||(sceneEl.is("vr-mode")||sceneEl.is("ar-mode"))&&sceneEl.checkHeadsetConnected()){return}if(evt.button!==0){return}var canvasEl=sceneEl&&sceneEl.canvas;this.mouseDown=true;this.previousMouseEvent.screenX=evt.screenX;this.previousMouseEvent.screenY=evt.screenY;this.showGrabbingCursor();if(this.data.pointerLockEnabled&&!this.pointerLocked){if(canvasEl.requestPointerLock){canvasEl.requestPointerLock()}else if(canvasEl.mozRequestPointerLock){canvasEl.mozRequestPointerLock()}}},showGrabbingCursor:function(){this.el.sceneEl.canvas.style.cursor="grabbing"},hideGrabbingCursor:function(){this.el.sceneEl.canvas.style.cursor=""},onMouseUp:function(){this.mouseDown=false;this.hideGrabbingCursor()},onTouchStart:function(evt){if(evt.touches.length!==1||!this.data.touchEnabled||this.el.sceneEl.is("vr-mode")||this.el.sceneEl.is("ar-mode")){return}this.touchStart={x:evt.touches[0].pageX,y:evt.touches[0].pageY};this.touchStarted=true},onTouchMove:function(evt){var direction;var canvas=this.el.sceneEl.canvas;var deltaY;var yawObject=this.yawObject;if(!this.touchStarted||!this.data.touchEnabled){return}deltaY=2*Math.PI*(evt.touches[0].pageX-this.touchStart.x)/canvas.clientWidth;direction=this.data.reverseTouchDrag?1:-1;yawObject.rotation.y-=deltaY*.5*direction;this.touchStart={x:evt.touches[0].pageX,y:evt.touches[0].pageY}},onTouchEnd:function(){this.touchStarted=false},onEnterVR:function(){var sceneEl=this.el.sceneEl;if(!sceneEl.checkHeadsetConnected()){return}this.saveCameraPose();this.el.object3D.position.set(0,0,0);this.el.object3D.rotation.set(0,0,0);if(sceneEl.hasWebXR){this.el.object3D.matrixAutoUpdate=false;this.el.object3D.updateMatrix()}},onExitVR:function(){if(!this.el.sceneEl.checkHeadsetConnected()){return}this.restoreCameraPose();this.previousHMDPosition.set(0,0,0);this.el.object3D.matrixAutoUpdate=true},onPointerLockChange:function(){this.pointerLocked=!!(document.pointerLockElement||document.mozPointerLockElement)},onPointerLockError:function(){this.pointerLocked=false},exitPointerLock:function(){document.exitPointerLock();this.pointerLocked=false},updateGrabCursor:function(enabled){var sceneEl=this.el.sceneEl;function enableGrabCursor(){sceneEl.canvas.classList.add("a-grab-cursor")}function disableGrabCursor(){sceneEl.canvas.classList.remove("a-grab-cursor")}if(!sceneEl.canvas){if(enabled){sceneEl.addEventListener("render-target-loaded",enableGrabCursor)}else{sceneEl.addEventListener("render-target-loaded",disableGrabCursor)}return}if(enabled){enableGrabCursor();return}disableGrabCursor()},saveCameraPose:function(){var el=this.el;this.savedPose.position.copy(el.object3D.position);this.savedPose.rotation.copy(el.object3D.rotation);this.hasSavedPose=true},restoreCameraPose:function(){var el=this.el;var savedPose=this.savedPose;if(!this.hasSavedPose){return}el.object3D.position.copy(savedPose.position);el.object3D.rotation.copy(savedPose.rotation);this.hasSavedPose=false}});